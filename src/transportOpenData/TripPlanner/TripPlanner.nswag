{
  "runtime": "Net90",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "basePath: /v1/tp\ndefinitions:\n    AdditionalInfoResponse:\n        description: 'This is the response data returned when performing an `add_info`\n            request.\n\n            '\n        properties:\n            error:\n                $ref: '#/definitions/ApiErrorResponse'\n                description: 'If an error has occurred, this element contains information\n                    about the error.\n\n                    '\n            infos:\n                description: 'Contains each of the returned service alerts.\n\n                    '\n                properties:\n                    affected:\n                        description: 'This specifies the list of affected stops and\n                            lines. It is an aggregate of each of the affected\n\n                            stops and lines listed in the alerts.\n\n                            '\n                        properties:\n                            lines:\n                                description: The specifies all of the lines that are\n                                    listed as affected in the alert information.\n                                items:\n                                    $ref: '#/definitions/AdditionalInfoResponseAffectedLine'\n                                type: array\n                            stops:\n                                description: The specifies all of the stops that are\n                                    listed as affected in the alert information.\n                                items:\n                                    $ref: '#/definitions/AdditionalInfoResponseAffectedStop'\n                                type: array\n                        type: object\n                    current:\n                        description: This specifies the list of current service alerts\n                            based on the specified filters.\n                        items:\n                            $ref: '#/definitions/AdditionalInfoResponseMessage'\n                        type: array\n                    historic:\n                        description: This specifies the list of previous service alerts\n                            based on the specified filters.\n                        items:\n                            $ref: '#/definitions/AdditionalInfoResponseMessage'\n                        type: array\n                type: object\n            timestamp:\n                description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                format: dateTime\n                type: string\n            version:\n                description: 'The version of the API that provided the response. Note\n                    that if this value is different to above, then the returned data\n                    may be\n\n                    different than expected. You can set the expected version using\n                    the `version` request parameter.\n\n                    '\n                type: string\n        type: object\n    AdditionalInfoResponseAffectedLine:\n        description: This element describes a single route that is affected by a service\n            alert.\n        properties:\n            destination:\n                description: This element describes the destination of trips fulfilled\n                    by the given line.\n                properties:\n                    name:\n                        description: This is the name of the destination.\n                        type: string\n                    type:\n                        description: The type of the location the destination is.\n                        enum:\n                        - poi\n                        - singlehouse\n                        - stop\n                        - platform\n                        - street\n                        - locality\n                        - suburb\n                        - gisPoint\n                        - unknown\n                        type: string\n                type: object\n            id:\n                description: This is the unique ID that identifies the given line.\n                type: string\n            name:\n                description: This is the full name of the route.\n                type: string\n            number:\n                description: This is the short name or code of the route.\n                type: string\n            product:\n                $ref: '#/definitions/RouteProduct'\n                description: This element contains additional properties about the\n                    route.\n        type: object\n    AdditionalInfoResponseAffectedStop:\n        description: This element describes a single stop that is affected by a service\n            alert.\n        properties:\n            id:\n                description: 'This the unique ID of the stop that is affected. It\n                    is the same ID that is\n\n                    used elsewhere in the system, such as in `trip` or\n\n                    `stop_finder`.\n\n                    '\n                type: string\n            name:\n                description: This is the title of the affected stop.\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'If available, contains information about this location''s\n                    parent location. For example, if the\n\n                    stop has a type of `platform`, then this field may contain information\n                    about the station in which\n\n                    the platform is located.\n\n                    '\n            type:\n                description: The type of the location that is affected.\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - gisPoint\n                - unknown\n                type: string\n        type: object\n    AdditionalInfoResponseMessage:\n        description: This element describes a single service alert.\n        properties:\n            affected:\n                description: 'This contains details about the lines and stops that\n                    are impacted by the described alert.\n\n                    '\n                properties:\n                    lines:\n                        description: This element contains a list of lines affected\n                            by this alert.\n                        items:\n                            $ref: '#/definitions/AdditionalInfoResponseAffectedLine'\n                        type: array\n                    stops:\n                        description: This element contains a list of stops affected\n                            by this alert.\n                        items:\n                            $ref: '#/definitions/AdditionalInfoResponseAffectedStop'\n                        type: array\n                type: object\n            content:\n                description: 'This is the descriptive alert content. It may contain\n                    HTML tags and/or HTML entities.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique identifier for this particular service\n                    alert.\n\n                    '\n                type: string\n            priority:\n                description: 'This value indicates how important the service alert\n                    is. A value of `high` or `veryHigh` likely indicates that\n\n                    the alert will correspond to an event that impacts the ability\n                    to travel for relevant users, while `low` or `veryLow`\n\n                    might be more of an informational message.\n\n                    '\n                enum:\n                - veryLow\n                - low\n                - normal\n                - high\n                - veryHigh\n                type: string\n            properties:\n                description: 'This element contains a additional information about\n                    the alert.\n\n                    '\n                properties:\n                    providerCode:\n                        description: 'This field uniquely identifies which operator\n                            or organisation entered the alert into the system.\n\n                            '\n                        type: string\n                    smsText:\n                        description: 'This is a plaintext summary of the alert content,\n                            although note that it may contain HTML entities such as\n                            &nbsp;.\n\n                            '\n                        type: string\n                    source:\n                        description: Contains information about who created this alert.\n                        properties:\n                            id:\n                                description: A unique identifier for the creator of\n                                    this alert.\n                                type: string\n                            name:\n                                description: The name of the creator of this alert.\n                                type: string\n                            type:\n                                description: The type of system of the alert creator.\n                                type: string\n                        type: object\n                type: object\n            subtitle:\n                description: 'This is short summary that can be used as a heading\n                    for the alert content. It may contain HTML tags and/or HTML entities.\n\n                    '\n                type: string\n            timestamps:\n                $ref: '#/definitions/AdditionalInfoResponseTimestamps'\n                description: 'This contains a number of timestamps that describe when\n                    the alert was created, and when the described alert actually\n\n                    takes place and/or is relevant.\n\n                    '\n            type:\n                description: 'This indicates the category of the service alert. For\n                    example, if this value is `stopInfo`, then the alert is\n\n                    related to an issue affecting a stop. It is then likely that the\n                    affected lines would be those that stop at\n\n                    the affected stop.\n\n\n                    * `routeInfo`: The alert is related to a specific route\n\n                    * `stopInfo`: The alert is related to a specific stop\n\n                    * `stopBlocking`: This alert is related to a stop closure\n\n                    * `lineInfo`: The alert is related to a specific journey\n\n                    * `bannerInfo`: The alert of high importance and potentially has\n                    a network-wide impact.\n\n                    '\n                enum:\n                - routeInfo\n                - stopInfo\n                - lineInfo\n                - bannerInfo\n                - stopBlocking\n                type: string\n            url:\n                description: This field contains a URL that contains additional information\n                    about the alert.\n                type: string\n            urlText:\n                description: This field contains a title that can be used when displaying\n                    the `infoLinkURL` URL.\n                type: string\n            version:\n                description: 'This number indicates the version of this alert. Initially\n                    when it is created it has version `1`, but if it is then\n\n                    updated it will have a new `lastModification` value and the version\n                    will now be `2`.\n\n                    '\n                type: integer\n        type: object\n    AdditionalInfoResponseTimestamps:\n        description: This element describes timestamps for a service alert.\n        properties:\n            availability:\n                description: 'This describes when the alert should published. Note\n                    that this is used as guidance only and your own\n\n                    needs may vary.\n\n                    '\n                properties:\n                    from:\n                        description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                        format: dateTime\n                        type: string\n                    to:\n                        description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                        format: dateTime\n                        type: string\n                type: object\n            creation:\n                description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    when the alert was created.\n                format: dateTime\n                type: string\n            lastModification:\n                description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    when the alert was last modified.\n                format: dateTime\n                type: string\n            validity:\n                description: 'This describes when the incident is actually occurring.\n\n                    '\n                items:\n                    properties:\n                        from:\n                            description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                                that indicates the starting date and time of this\n                                date range.\n                            format: dateTime\n                            type: string\n                        to:\n                            description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                                that indicates the ending date and time of this date\n                                range.\n                            format: dateTime\n                            type: string\n                    type: object\n                type: array\n        type: object\n    ApiErrorResponse:\n        description: 'This element contains information about an error that may have\n            occurred when handling an API request.\n\n            '\n        properties:\n            message:\n                description: Describes the error that went wrong\n                type: string\n            versions:\n                description: 'If the error was related to the API version, this element\n                    contains version information.\n\n                    '\n                properties:\n                    controller:\n                        description: The version of the API handling the request\n                        type: string\n                    interfaceMax:\n                        description: The maximum version number that can be requested\n                            in the `version` request parameter.\n                        type: string\n                    interfaceMin:\n                        description: The minimum version number that can be requested\n                            in the `version` request parameter.\n                        type: string\n                type: object\n        type: object\n    CoordRequestResponse:\n        description: 'This is the response data returned when performing an `coord`\n            request.\n\n            '\n        properties:\n            error:\n                $ref: '#/definitions/ApiErrorResponse'\n                description: 'If an error has occurred, this element contains information\n                    about the error.\n\n                    '\n            locations:\n                description: 'This contains a list of all of the stops, reload points\n                    and places of interest found based on the given request.\n\n                    '\n                items:\n                    $ref: '#/definitions/CoordRequestResponseLocation'\n                type: array\n            version:\n                description: 'The version of the API that provided the response. Note\n                    that if this value is different to above, then the returned data\n                    may be\n\n                    different than expected. You can set the expected version using\n                    the `version` request parameter.\n\n                    '\n                type: string\n        type: object\n    CoordRequestResponseLocation:\n        description: 'Describes a single point that is returned based on the given\n            request.\n\n            '\n        properties:\n            coord:\n                description: 'Contains exactly two values: the first value is the\n                    latitude, the second value is the longitude.\n\n                    '\n                items:\n                    format: double\n                    type: number\n                type: array\n            disassembledName:\n                description: 'This is the short version of the location name, which\n                    does not include the suburb or other information.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique ID for the returned location. Certain\n                    types of ID can be used for subsequent searches performed with\n                    `stop_finder`,\n\n                    or can be used as the origin or destination in an `trip` request.\n                    The format of a location ID differs greatly, depending\n\n                    on the type of location it is.\n\n                    '\n                type: string\n            name:\n                description: 'Contains a human-readable title for the location.\n\n                    '\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'If available, contains information about this location''s\n                    parent location. For example, if the\n\n                    stop has a type of `platform`, then this field may contain information\n                    about the station in which\n\n                    the platform is located.\n\n                    '\n            properties:\n                description: 'This data contains additional information about each\n                    location, mainly related to how\n\n                    it can be categorised or displayed on a map.\n\n                    '\n                properties:\n                    GIS_DRAW_CLASS:\n                        description: 'This value indicates how the given point can\n                            be represented on a map. For example,\n\n                            if you have different icons for different categories,\n                            use this to determine which icon to use.\n\n\n                            * `CityL`\n\n                            * `CityM`\n\n                            * `CityS`\n\n                            * `CityXL`\n\n                            * `CityXS`\n\n                            * `Generic7`\n\n                            * `Generic8`\n\n                            * `Generic9`\n\n                            * `Generic20`\n\n                            * `PoiAirportPublic`\n\n                            * `PoiCemetry`\n\n                            * `PoiCulture`\n\n                            * `PoiGastro`\n\n                            * `PoiGeneral`\n\n                            * `PoiGovernment`\n\n                            * `PoiHistoric`\n\n                            * `PoiHotel`\n\n                            * `PoiMedicine`\n\n                            * `PoiOthers`\n\n                            * `PoiPark`\n\n                            * `PoiParking`\n\n                            * `PoiPublicBuilding`\n\n                            * `PoiReligion`\n\n                            * `PoiSchool`\n\n                            * `PoiSport`\n\n                            * `PoiSwimming`\n\n                            * `PoiTrafficSpecial`\n\n                            '\n                        type: string\n                    GIS_DRAW_CLASS_TYPE:\n                        description: This value typically either empty or `POINT`.\n                        enum:\n                        - POINT\n                        type: string\n                    GIS_NIVEAU:\n                        description: This data is not used at this time.\n                        type: string\n                    POI_DRAW_CLASS:\n                        description: 'This value indicates how the given point can\n                            be represented on a map. For example,\n\n                            if you have different icons for different categories,\n                            use this to determine which icon to use.\n\n\n                            * `PoiCemetry`\n\n                            * `PoiCulture`\n\n                            * `PoiGastro`\n\n                            * `PoiGeneral`\n\n                            * `PoiGovernment`\n\n                            * `PoiHotel`\n\n                            * `PoiMedicine`\n\n                            * `PoiOthers`\n\n                            * `PoiPark`\n\n                            * `PoiParking`\n\n                            * `PoiPublicBuilding`\n\n                            * `PoiReligion`\n\n                            * `PoiSchool`\n\n                            * `PoiSport`\n\n                            * `PoiSwimming`\n\n                            * `PoiTrafficSpecial`\n\n                            '\n                        type: string\n                    POI_DRAW_CLASS_TYPE:\n                        description: This value typically either empty or `POINT`.\n                        enum:\n                        - POINT\n                        type: string\n                    POI_HIERARCHY_0:\n                        description: 'This field contains a human-readable description\n                            of the category to which this\n\n                            location belongs. See the description for `POI_HIERARCHY_KEY`\n                            for example values that\n\n                            correspond to the given keys.\n\n                            '\n                        type: string\n                    POI_HIERARCHY_KEY:\n                        description: 'This field contains a constant value for the\n                            category to which this category belongs.\n\n\n                            * `A`: Accommodation\n\n                            * `B`: Caravan and Camping\n\n                            * `C`: Cemetary\n\n                            * `D`: Education\n\n                            * `E`: Emergency or Defence\n\n                            * `F`: Entertainment\n\n                            * `G`: Gardens or Parklands\n\n                            * `H`: Golf Clubs\n\n                            * `I`: Historical or Religious\n\n                            * `K`: Local Government\n\n                            * `L`: Medical and Care\n\n                            * `O`: Sporting or Recreation\n\n                            * `Q`: Tourist Attraction\n\n                            * `R`: Transport\n\n                            * `S`: Utilities and Facilities\n\n                            * `T`: Others\n\n                            '\n                        type: string\n                    distance:\n                        description: This is the distance in metres to this location\n                            from the search location.\n                        type: string\n                type: object\n            type:\n                description: 'This specifies the type of the returned item. If you\n                    search with a type of `GIS_POINT`,\n\n                    a returned item has a type of `gisPoint`.\n\n                    '\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - gisPoint\n                - unknown\n                type: string\n        type: object\n    DepartureMonitorResponse:\n        description: 'This is the response data returned when performing an `departure_mon`\n            request.\n\n            '\n        properties:\n            error:\n                $ref: '#/definitions/ApiErrorResponse'\n                description: 'If an error has occurred, this element contains information\n                    about the error.\n\n                    '\n            locations:\n                description: 'Contains a list of stops that were matched based on\n                    the supplied `type_dm` and `name_dm` request values. There must\n                    be exactly\n\n                    one location present for the `stopEvents` response data to be\n                    populated. Additionally, the `mode` request value must be set\n\n                    to `direct`.\n\n                    '\n                items:\n                    $ref: '#/definitions/StopFinderLocation'\n                type: array\n            stopEvents:\n                description: 'Contains a list of departures/arrivals for the stop\n                    included in the `location` property of the response.\n\n                    '\n                items:\n                    $ref: '#/definitions/DepartureMonitorResponseStopEvent'\n                type: array\n            version:\n                description: 'The version of the API that provided the response. Note\n                    that if this value is different to above, then the returned data\n                    may be\n\n                    different than expected. You can set the expected version using\n                    the `version` request parameter.\n\n                    '\n                type: string\n        type: object\n    DepartureMonitorResponseStopEvent:\n        description: 'Corresponds to a single departure or arrival for the given stop.\n\n            '\n        properties:\n            departureTimePlanned:\n                description: A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format\n                format: dateTime\n                type: string\n            infos:\n                description: 'Contains a number of service alert messages relating\n                    to this stop event.\n\n                    Information returned here is also available using the `add_info`\n                    API endpoint.\n\n                    '\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegStopInfo'\n                type: array\n            location:\n                $ref: '#/definitions/StopFinderLocation'\n                description: 'This element contains a single location associated with\n                    this stop time.\n\n                    '\n            transportation:\n                $ref: '#/definitions/TripTransportation'\n                description: 'This element describes the mode of transportation and/or\n                    the specific route or trip\n\n                    used for this stop time.\n\n                    '\n        type: object\n    HttpErrorResponse:\n        description: 'This element contains information about a HTTP error that occurred.\n\n            '\n        properties:\n            ErrorDateTime:\n                description: The date and time that the error occurred.\n                type: string\n            Message:\n                description: A detailed message about the error.\n                type: string\n            RequestedMethod:\n                description: The HTTP request method used for the current request.\n                type: string\n            RequestedUrl:\n                description: The URL for the current request.\n                type: string\n            TransactionId:\n                description: A unique identifier for the current request.\n                type: string\n        type: object\n    ParentLocation:\n        description: 'Describes a parent location. Locations are hierarchical, mean\n            a location has a parent, and\n\n            a location may have any number of child locations. A parent location is\n            often included with locations,\n\n            which can help traverse the location tree.\n\n            '\n        properties:\n            disassembledName:\n                description: 'This is the short version of the location name, which\n                    does not include the suburb or other information.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique ID for the returned location. Certain\n                    types of ID can be used for subsequent searches performed with\n                    `stop_finder`,\n\n                    or can be used as the origin or destination in an `trip` request.\n                    The format of a location ID differs greatly, depending\n\n                    on the type of location it is.\n\n                    '\n                type: string\n            name:\n                description: 'This is the long version of the location name, which\n                    may include the suburb or other information.\n\n                    '\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'In some cases, a parent location will also contain its\n                    parent (in other words, the grandparent of the initial location)\n\n                    '\n            type:\n                description: 'This is the type of location being returned. It may\n                    represent a stop or platform that a public transport service physically\n\n                    stops at for passenger boarding, or it may represent somebody''s\n                    house.\n\n                    A value of `unknown` likely indicates bad data coming from the\n                    server. If a location is returned with this type, you can safely\n                    ignore it.\n\n                    '\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - unknown\n                type: string\n        type: object\n    RouteProduct:\n        description: This element contains additional properties about the route.\n        properties:\n            class:\n                description: 'This field indicates the type of the route, using the\n                    same values\n\n                    as elsewhere in this API.\n\n\n                    * `1`: Train\n                    \n                    * `2`: Metro\n\n                    * `4`: Light Rail\n\n                    * `5`: Bus\n\n                    * `7`: Coach\n\n                    * `9`: Ferry\n\n                    * `11`: School Bus\n\n                    * `99`: Walking\n\n                    * `100`: Walking (Footpath)\n\n                    * `101`: Bicycle\n\n                    * `102`: Take Bicycle On Public Transport\n\n                    * `103`: Kiss & Ride\n\n                    * `104`: Park & Ride\n\n                    * `105`: Taxi\n\n                    * `106`: Car\n\n                    '\n                type: integer\n            iconId:\n                description: 'This field is used by to determine which icon to use\n                    when displaying\n\n                    this affected route. It will typically match up with the `class`\n                    value.\n\n                    '\n                type: integer\n            name:\n                description: Name of the product\n                type: string\n        type: object\n    StopFinderAssignedStop:\n        description: 'An assigned stop is a location that public transport stops at.\n            Locations / places of interest that aren''t stops may have one\n\n            or more stops \"assigned\" to it as being \"the stop(s) you would use if\n            you were in this location\".\n\n            '\n        properties:\n            connectingMode:\n                description: 'This is the mode of transport that is used to connect\n                    to this stop. The following values are available:\n\n\n                    * `1`: Train\n                    \n                    * `2`: Metro\n\n                    * `4`: Light Rail\n\n                    * `5`: Bus\n\n                    * `7`: Coach\n\n                    * `9`: Ferry\n\n                    * `11`: School Bus\n\n                    * `97`: Remain On-Board\n\n                    * `99`: Walking\n\n                    * `100`: Walking (Footpath)\n\n                    * `101`: Bicycle\n\n                    * `102`: Take Bicycle On Public Transport\n\n                    * `103`: Kiss & Ride\n\n                    * `104`: Park & Ride\n\n                    * `105`: Taxi\n\n                    * `106`: Car\n\n                    '\n                type: integer\n            coord:\n                description: 'Contains exactly two values: the first value is the\n                    latitude, the second value is the longitude.\n\n                    '\n                items:\n                    format: double\n                    type: number\n                type: array\n            disassembledName:\n                description: 'This is the short version of the location name, which\n                    does not include the suburb or other information.\n\n                    '\n                type: string\n            distance:\n                description: This is the distance in metres to this stop from the\n                    location to which it is assigned.\n                type: integer\n            duration:\n                description: This is the number of minutes it would take to reach\n                    this stop from the location to which it is assigned.\n                type: integer\n            id:\n                description: 'This is a unique ID for the returned location. Certain\n                    types of ID can be used for subsequent searches performed with\n                    `stop_finder`,\n\n                    or can be used as the origin or destination in an `trip` request.\n                    The format of a location ID differs greatly, depending\n\n                    on the type of location it is.\n\n                    '\n                type: string\n            modes:\n                description: 'This is included only if the `type` value is set to\n                    `stop`. Contains a list of modes of transport\n\n                    that service this stop. This can be useful for showing relevant\n                    wayfinding icons when presenting users\n\n                    with a list of matching stops to choose from.\n\n\n                    The following values may be present:\n\n\n                    * `1`: Train\n                    \n                    * `2`: Metro\n\n                    * `4`: Light Rail\n\n                    * `5`: Bus\n\n                    * `7`: Coach\n\n                    * `9`: Ferry\n\n                    * `11`: School Bus\n\n                    '\n                items:\n                    type: integer\n                type: array\n            name:\n                description: 'This is the long version of the location name, which\n                    may include the suburb or other information.\n\n                    '\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'If available, contains information about this location''s\n                    parent location. For example, if the\n\n                    stop has a type of `platform`, then this field may contain information\n                    about the station in which\n\n                    the platform is located.\n\n                    '\n            type:\n                description: 'A value of `unknown` likely indicates bad data. If a\n                    location is returned with this type, you can safely ignore it.\n\n                    '\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - unknown\n                type: string\n        type: object\n    StopFinderLocation:\n        description: This element describes a single location that is returned in\n            an `stop_finder` request.\n        properties:\n            assignedStops:\n                description: 'This is a list of stops that are assigned to this location.\n                    This means if you''re in the current location and want to catch\n\n                    public transport, these assigned stops are directly available\n                    to you.\n\n                    '\n                items:\n                    $ref: '#/definitions/StopFinderAssignedStop'\n                type: array\n            buildingNumber:\n                description: 'This is the number of the property, included only if\n                    the `type` value is set to `singlehouse`. Note that it is a string,\n                    as it may include non-numeric characters.\n\n                    '\n                type: string\n            coord:\n                description: 'Contains exactly two values: the first value is the\n                    latitude, the second value is the longitude.\n\n                    '\n                items:\n                    format: double\n                    type: number\n                type: array\n            disassembledName:\n                description: 'This is the short version of the location name, which\n                    does not include the suburb or other information.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique ID for the returned location. Certain\n                    types of ID can be used for subsequent searches performed with\n                    `stop_finder`,\n\n                    or can be used as the origin or destination in an `trip` request.\n                    The format of a location ID differs greatly, depending\n\n                    on the type of location it is.\n\n                    '\n                type: string\n            isBest:\n                description: Indicates whether or not this is the best match out of\n                    all the returned locations.\n                type: boolean\n            isGlobalId:\n                description: 'This determines whether the id property is a global\n                    stop id or not\n\n                    '\n                type: boolean\n            matchQuality:\n                description: This value indicates how well the returned stop matches\n                    the search query. A higher number indicates a better match.\n                type: integer\n            modes:\n                description: 'This is included only if the `type` value is set to\n                    `stop`. Contains a list of modes of transport\n\n                    that service this stop. This can be useful for showing relevant\n                    wayfinding icons when presenting users\n\n                    with a list of matching stops to choose from.\n\n\n                    The following values may be present:\n\n\n                    * `1`: Train\n                    \n                    * `2`: Metro\n\n                    * `4`: Light Rail\n\n                    * `5`: Bus\n\n                    * `7`: Coach\n\n                    * `9`: Ferry\n\n                    * `11`: School Bus\n\n                    '\n                items:\n                    type: integer\n                type: array\n            name:\n                description: 'This is the long version of the location name, which\n                    may include the suburb or other information.\n\n                    '\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'If available, contains information about this location''s\n                    parent location. For example, if the\n\n                    stop has a type of `platform`, then this field may contain information\n                    about the station in which\n\n                    the platform is located.\n\n                    '\n            streetName:\n                description: This is included only if the `type` value is set to `street`\n                    or `singlehouse`.\n                type: string\n            type:\n                description: 'This is the type of location being returned. It may\n                    represent a stop or platform that a public transport service physically\n\n                    stops at for passenger boarding, or it may represent somebody''s\n                    house.\n\n                    A value of `unknown` likely indicates bad data coming from the\n                    server. If a location is returned with this type, you can safely\n                    ignore it.\n\n                    '\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - address\n                - unknown\n                type: string\n        type: object\n    StopFinderResponse:\n        description: This element contains the response for an `stop_finder` request.\n        properties:\n            error:\n                $ref: '#/definitions/ApiErrorResponse'\n                description: 'If an error has occurred, this element contains information\n                    about the error.\n\n                    '\n            locations:\n                description: 'An array of all locations that were found using the\n                    specified search input. To display the results in a way that makes\n                    sense to\n\n                    the end user, you can sort this list by `matchQuality`. Alternatively,\n                    you can group the results by their type and/or sort them\n\n                    alphabetically.\n\n                    '\n                items:\n                    $ref: '#/definitions/StopFinderLocation'\n                type: array\n            version:\n                description: 'The version of the API that provided the response. Note\n                    that if this value is different to above, then the returned data\n                    may be\n\n                    different than expected. You can set the expected version using\n                    the `version` request parameter.\n\n                    '\n                type: string\n        type: object\n    TripRequestResponse:\n        description: This element contains the response from an `trip` request.\n        properties:\n            error:\n                $ref: '#/definitions/ApiErrorResponse'\n                description: 'If an error has occurred, this element contains information\n                    about the error.\n\n                    '\n            journeys:\n                description: Contains zero or more journeys found based on the input\n                    parameters.\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourney'\n                type: array\n            systemMessages:\n                description: Includes system messages that may be relevant to this\n                    particular request.\n                properties:\n                    responseMessages:\n                        description: Contains zero or more messages.\n                        items:\n                            $ref: '#/definitions/TripRequestResponseMessage'\n                        type: array\n                type: object\n            version:\n                description: 'The version of the API that provided the response. Note\n                    that if this value is different to above, then the returned data\n                    may be\n\n                    different than expected. You can set the expected version using\n                    the `version` request parameter.\n\n                    '\n                type: string\n        type: object\n    TripRequestResponseJourney:\n        description: This element describes a single journey returned by `trip`\n        properties:\n            isAdditional:\n                description: XXX\n                type: boolean\n            legs:\n                description: This element contains one or more legs that constitute\n                    the trip.\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLeg'\n                type: array\n            rating:\n                description: XXX\n                type: integer\n        type: object\n    TripRequestResponseJourneyFareZone:\n        description: Not currently used.\n        properties:\n            fromLeg:\n                description: Not currently used.\n                type: integer\n            net:\n                description: Not currently used.\n                type: string\n            neutralZone:\n                description: Not currently used.\n                type: string\n            toLeg:\n                description: Not currently used.\n                type: integer\n        type: object\n    TripRequestResponseJourneyLeg:\n        description: This element describes a single leg of a journey. A journey is\n            made up of one or more legs.\n        properties:\n            coords:\n                description: 'This elements contains a list of coordinates that this\n                    journey leg follows. A line between\n\n                    can be plotted between these coordinates in order when representing\n                    the journey on a map\n\n                    in order to show where the vehicle travels (or for a walking leg,\n                    the path to be walked).\n\n                    '\n                items:\n                    description: 'Contains exactly two values: the first value is\n                        the latitude, the second value is the longitude.\n\n                        '\n                    items:\n                        format: double\n                        type: number\n                    type: array\n                type: array\n            destination:\n                $ref: '#/definitions/TripRequestResponseJourneyLegStop'\n                description: This is the finishing location of the leg.\n            distance:\n                description: The approximate distance in metres travelled to complete\n                    this journey leg.\n                type: integer\n            duration:\n                description: The approximate amount of time in seconds required to\n                    complete this journey leg.\n                type: integer\n            footPathInfo:\n                description: 'If the leg corresponds to a walking leg, this element\n                    contains walking directions.\n\n                    '\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegStopFootpathInfo'\n                type: array\n            hints:\n                description: Contains a number of additional informational messages\n                    that may be useful for travellers.\n                items:\n                    properties:\n                        infoText:\n                            description: 'Contains additional information that may\n                                be useful for travellers.\n\n                                '\n                            type: string\n                    type: object\n                type: array\n            infos:\n                description: 'Contains a number of service alert messages relating\n                    to this journey leg.\n\n                    Information returned here is also available using the `add_info`\n                    API endpoint.\n\n                    '\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegStopInfo'\n                type: array\n            interchange:\n                $ref: '#/definitions/TripRequestResponseJourneyLegInterchange'\n                description: 'Contains information for how to interchange between\n                    the end of one leg to the next journey leg.\n\n                    '\n            isRealtimeControlled:\n                description: This indicates whether or not real-time data has been\n                    used to calculate the departure/arrival timestamps\n                type: boolean\n            origin:\n                $ref: '#/definitions/TripRequestResponseJourneyLegStop'\n                description: This is the starting location of the leg.\n            pathDescriptions:\n                description: Contains walking information for completing this journey\n                    leg.\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegPathDescription'\n                type: array\n            properties:\n                description: 'Contains additional information about this journey leg,\n                    such as wheelchair accessibility information.\n\n                    '\n                properties:\n                    DIFFERENT_FARES:\n                        description: XXX\n                        type: string\n                    PlanLowFloorVehicle:\n                        description: This indicates whether or not the vehicle is\n                            wheelchair accessible.\n                        type: string\n                    PlanWheelChairAccess:\n                        description: This indicates whether or not the stop is wheelchair\n                            accessible.\n                        type: string\n                    lineType:\n                        description: 'XXX seen a value of SUPPLEMENT for ferry route\n\n                            '\n                        type: string\n                    vehicleAccess:\n                        description: This value is not currently in use.\n                        items:\n                            type: string\n                        type: array\n                type: object\n            stopSequence:\n                description: 'This is a list of all stops that are made for this leg.\n                    It is sorted in order of its\n\n                    stopping sequence. If the leg is a walking leg between two stops,\n                    then this will contain\n\n                    these two stops in order.\n\n                    '\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegStop'\n                type: array\n            transportation:\n                $ref: '#/definitions/TripTransportation'\n                description: 'This element contains information about the mode of\n                    transport and/or route\n\n                    used to complete this journey leg.\n\n                    '\n        type: object\n    TripRequestResponseJourneyLegInterchange:\n        description: 'This object describes walking directions for interchanging between\n            two consecutive legs. This\n\n            occurs in the case when there''s only a small distance between two transit\n            legs, not enough\n\n            to constitute a standalone walking leg.\n\n            '\n        properties:\n            coords:\n                description: 'This is a list of coordinates that makes up the path\n                    of the interchange.\n\n                    '\n                items:\n                    description: 'Contains exactly two values: the first value is\n                        the latitude, the second value is the longitude.\n\n                        '\n                    items:\n                        format: double\n                        type: number\n                    type: array\n                type: array\n            desc:\n                description: 'This is a description of the interchange.\n\n                    '\n                type: string\n            type:\n                description: 'This indicates the mode of travel for the interchange.\n                    Both `99` and `100` indicate walking.\n\n                    '\n                enum:\n                - 99\n                - 100\n                type: integer\n        type: object\n    TripRequestResponseJourneyLegPathDescription:\n        description: Contains a single instruction for completing a walking leg associated\n            with a journey leg.\n        properties:\n            coord:\n                description: 'Contains exactly two values: the first value is the\n                    latitude, the second value is the longitude. This is the\n\n                    location where the instruction occurs.\n\n                    '\n                items:\n                    format: double\n                    type: number\n                type: array\n            cumDistance:\n                description: This is the cumulative distance travelled in metres at\n                    the point of this step.\n                type: integer\n            cumDuration:\n                description: 'This is the cumulative duration in seconds at the point\n                    of this step.\n\n                    '\n                type: integer\n            distance:\n                description: 'This is the distance travelled in this step in metres.\n\n                    '\n                type: integer\n            distanceDown:\n                description: 'This is the distance travelled downward in this step\n                    in metres\n\n                    '\n                type: integer\n            distanceUp:\n                description: 'This is the distance travelled upward in this step in\n                    metres\n\n                    '\n                type: integer\n            duration:\n                description: 'This is the duration of this step in seconds.\n\n                    '\n                type: integer\n            fromCoordsIndex:\n                description: 'This field enables you to retrieve multiple coordinates\n                    from the `coords` property, starting from this index.\n\n                    '\n                type: integer\n            manoeuvre:\n                description: 'Indicates what you have to do (in addition the turn\n                    `turnDirection`) to execute this step of the path description.\n\n                    '\n                enum:\n                - LEAVE\n                - KEEP\n                - TURN\n                - ENTER\n                - CONTINUE\n                type: string\n            name:\n                description: 'This is a specific description of what to do. In some\n                    cases, this information is required in addition to the\n\n                    other properties provided in this step.\n\n                    '\n                type: string\n            skyDirection:\n                description: The direction in degrees (0-359) of the skyDirection\n                type: integer\n            toCoordsIndex:\n                description: 'This field enables you to retrieve multiple coordinates\n                    from the `coords` property, ending at this index.\n\n                    '\n                type: integer\n            turnDirection:\n                description: 'Indicates the way you need to turn to execute this step\n                    of the path description.\n\n                    '\n                enum:\n                - UNKNOWN\n                - STRAIGHT\n                - RIGHT\n                - LEFT\n                - SLIGHT_RIGHT\n                - SLIGHT_LEFT\n                - SHARP_LEFT\n                - SHARP_RIGHT\n                type: string\n        type: object\n    TripRequestResponseJourneyLegStop:\n        description: 'Contains information about a single stop in the journey leg.\n\n            Typically, the first stop in a journey leg will only include departure\n            time information,\n\n            while the last stop in a journey leg will only include arrival time information.\n            Stops in between\n\n            will include both arrival and departure time information.\n\n            '\n        properties:\n            arrivalTimeEstimated:\n                description: 'A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    the estimated arrival time. If real-time\n\n                    information is available then this timestamp is the real-time\n                    estimate, otherwise it is the same as the\n\n                    value in `arrivalTimePlanned`.\n\n                    '\n                format: dateTime\n                type: string\n            arrivalTimePlanned:\n                description: 'A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    the planned arrival time. This is\n\n                    the original scheduled time.\n\n                    '\n                format: dateTime\n                type: string\n            coord:\n                description: 'Contains exactly two values: the first value is the\n                    latitude, the second value is the longitude.\n\n                    '\n                items:\n                    format: double\n                    type: number\n                type: array\n            departureTimeEstimated:\n                description: 'A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    the estimated departure time. If real-time\n\n                    information is available then this timestamp is the real-time\n                    estimate, otherwise it is the same as the\n\n                    value in `departureTimePlanned`.\n\n                    '\n                format: dateTime\n                type: string\n            departureTimePlanned:\n                description: 'A timestamp in `YYYY-MM-DDTHH:MM:SSZ` format that indicates\n                    the planned departure time. This is\n\n                    the original scheduled time.\n\n                    '\n                format: dateTime\n                type: string\n            disassembledName:\n                description: 'This is the short version of the location name, which\n                    does not include the suburb or other information.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique ID for the returned location. Certain\n                    types of ID can be used for subsequent searches performed with\n                    `stop_finder`,\n\n                    or can be used as the origin or destination in an `trip` request.\n                    The format of a location ID differs greatly, depending\n\n                    on the type of location it is.\n\n                    '\n                type: string\n            name:\n                description: 'This is the long version of the location name, which\n                    may include the suburb or other information.\n\n                    '\n                type: string\n            parent:\n                $ref: '#/definitions/ParentLocation'\n                description: 'If available, contains information about this location''s\n                    parent location. For example, if the\n\n                    stop has a type of `platform`, then this field may contain information\n                    about the station in which\n\n                    the platform is located.\n\n                    '\n            properties:\n                description: 'Contains additional information about this stop, such\n                    as wheelchair accessibility information.\n\n                    '\n                properties:\n                    WheelchairAccess:\n                        description: 'Indicates if there is wheelchair access available\n                            at this stop.\n\n                            '\n                        enum:\n                        - 'true'\n                        - 'false'\n                        type: string\n                    downloads:\n                        description: 'Describes a list of downloadable files relevant\n                            to this location.\n\n                            '\n                        items:\n                            $ref: '#/definitions/TripRequestResponseJourneyLegStopDownload'\n                        type: array\n                type: object\n            type:\n                description: 'This is the type of location being returned. It will\n                    typically represent a specific stop or platform.\n\n                    '\n                enum:\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                - unknown\n                type: string\n        type: object\n    TripRequestResponseJourneyLegStopDownload:\n        description: Describes a single download available for this journey stop.\n        properties:\n            type:\n                description: 'This indicates what type of download this is. For example,\n                    `RM` refers to Route Map.\n\n                    '\n                type: string\n            url:\n                description: 'This is the URL for the download.\n\n                    '\n                type: string\n        type: object\n    TripRequestResponseJourneyLegStopFootpathInfo:\n        description: Contains walking directions for a walking leg.\n        properties:\n            duration:\n                description: 'This is approximately how long in seconds the walking\n                    instructions contained in this element take to perform.\n\n                    '\n                type: integer\n            footPathElem:\n                description: 'This describes the specific instructions for the walking\n                    leg.\n\n                    '\n                items:\n                    $ref: '#/definitions/TripRequestResponseJourneyLegStopFootpathInfoFootpathElem'\n                type: array\n            position:\n                description: 'This indicates where in the leg the walking part of\n                    this legs occurs, since for some legs this\n\n                    is included with transportation on a vehicle.\n\n                    '\n                enum:\n                - BEFORE\n                - AFTER\n                - IDEST\n                type: string\n        type: object\n    TripRequestResponseJourneyLegStopFootpathInfoFootpathElem:\n        description: The element describes a single walking instruction.\n        properties:\n            description:\n                description: 'Contains additional information about this instruction,\n                    but is generally unused.\n\n                    '\n                type: string\n            destination:\n                $ref: '#/definitions/TripRequestResponseJourneyLegStopFootpathInfoFootpathElemLocation'\n                description: 'Indicates the starting location for this leg, in terms\n                    of locations in the system\n\n                    such as stops or places of interest. Typically, since these instructions\n                    indicate\n\n                    how to travel within a stop or station, the `origin` and `destination`\n                    will both\n\n                    reference the same stop, but the coordinate will be specific to\n                    this instruction.\n\n                    '\n            level:\n                description: 'Indicates the direction of travel for this instruction.\n                    Generally a ramp, escalator\n\n                    or stairs will go `UP` or `DOWN` to a different floor. This value\n                    will be `LEVEL` when\n\n                    the `type` field is also `LEVEL`.\n\n                    '\n                enum:\n                - DOWN\n                - LEVEL\n                - UP\n                type: string\n            levelFrom:\n                description: 'Indicates the floor number the instruction is starting\n                    from. If the `type` is `LEVEL`,\n\n                    then the `levelFrom` and `levelTo` values should be the same.\n\n                    '\n                type: integer\n            levelTo:\n                description: 'Indicates the floor number the instruction ends of.\n                    If the `type` is `LEVEL`,\n\n                    then the `levelFrom` and `levelTo` values should be the same.\n\n                    '\n                type: integer\n            origin:\n                $ref: '#/definitions/TripRequestResponseJourneyLegStopFootpathInfoFootpathElemLocation'\n                description: 'Indicates the starting location for this leg, in terms\n                    of locations in the system\n\n                    such as stops or places of interest. Typically, since these instructions\n                    indicate\n\n                    how to travel within a stop or station, the `origin` and `destination`\n                    will both\n\n                    reference the same stop, but the coordinate will be specific to\n                    this instruction.\n\n                    '\n            type:\n                description: 'This indicates the type of \"terrain\" for this instruction.\n                    `LEVEL` indicates a normal\n\n                    flat surface.\n\n                    '\n                enum:\n                - ESCALATOR\n                - ELEVATOR\n                - STAIRS\n                - LEVEL\n                - RAMP\n                type: string\n        type: object\n    TripRequestResponseJourneyLegStopFootpathInfoFootpathElemLocation:\n        description: This element describes a starting or finishing point for a walking\n            instruction.\n        properties:\n            area:\n                description: This is an internal value used to group stops together.\n                type: integer\n            georef:\n                description: 'This is an identifier for this particular instruction\n                    / location, based on its location.\n\n                    '\n                type: string\n            location:\n                description: 'This includes information about the location in which\n                    this instruction takes place.\n\n                    '\n                properties:\n                    coord:\n                        description: 'Contains exactly two values: the first value\n                            is the latitude, the second value is the longitude.\n\n                            Although multiple instructions may reference the same\n                            location, this coordinate is specific\n\n                            to this particular instruction.\n\n                            '\n                        items:\n                            format: double\n                            type: number\n                        type: array\n                    id:\n                        description: This the unique ID for the stop in which this\n                            instruction occurs.\n                        type: string\n                    type:\n                        description: This is the type of location in which this instruction\n                            occurs.\n                        enum:\n                        - poi\n                        - singlehouse\n                        - stop\n                        - platform\n                        - street\n                        - locality\n                        - suburb\n                        - unknown\n                        type: string\n                type: object\n            platform:\n                description: 'If available, this is a platform number that relates\n                    to this instruction. It defaults to `0` if\n\n                    there is no such information available.\n\n                    '\n                type: integer\n        type: object\n    TripRequestResponseJourneyLegStopInfo:\n        description: 'This element describes a single information message that may\n            be associated with a journey leg.\n\n            The data in this is similar to that from `add_info`, but is presented\n            differently.\n\n            '\n        properties:\n            content:\n                description: 'This is the descriptive alert content. It may contain\n                    HTML tags and/or HTML entities.\n\n                    '\n                type: string\n            id:\n                description: 'This is a unique identifier for this particular service\n                    alert. Note that this same ID is used in\n\n                    `add_info` for the same alert.\n\n                    '\n                type: string\n            priority:\n                description: 'This value indicates how important the service alert\n                    is. A value of `high` or `veryHigh` likely indicates that\n\n                    the alert will correspond to an event that impacts the ability\n                    to travel for relevant users, while `low` or `veryLow`\n\n                    might be more of an informational message.\n\n                    '\n                enum:\n                - veryLow\n                - low\n                - normal\n                - high\n                - veryHigh\n                type: string\n            subtitle:\n                description: 'This is short summary that can be used as a heading\n                    for the alert content. It may contain HTML tags and/or HTML entities.\n\n                    '\n                type: string\n            timestamps:\n                $ref: '#/definitions/AdditionalInfoResponseTimestamps'\n                description: 'This contains a number of timestamps that describe when\n                    the alert was created, and when the described alert actually\n\n                    takes place and/or is relevant.\n\n                    '\n            url:\n                description: 'This field contains a URL that contains additional information\n                    about the alert. This value is equivalent to\n\n                    the `infoLinkURL` value in `add_info`.\n\n                    '\n                type: string\n            urlText:\n                description: 'This field contains a title that can be used when displaying\n                    the `url` URL. This value is equivalent to\n\n                    the `infoLinkText` value in `add_info`.\n\n                    '\n                type: string\n            version:\n                description: 'This number indicates the version of this alert. Initially\n                    when it is created it has version `1`, but if it is then\n\n                    updated it will have a new `lastModification` value and the version\n                    will now be `2`.\n\n                    '\n                type: integer\n        type: object\n    TripRequestResponseMessage:\n        description: This element describes a single message that may be included\n            with an `trip` request.\n        properties:\n            code:\n                description: 'This is an error/warning code for the message. Note\n                    that the same code may be returned\n\n                    with a different meaning, depending on the context. The following\n                    error codes are possible:\n\n\n                    * `-1000` (`PLACE_INVALID`) - Invalid locality input\n\n                    * `-1001` (`PLACE_WITHOUT_STOPS`) - Verified locality does not\n                    have stops\n\n                    * `-1010` (`PLACE_UNKNOWN_POOL`) - Locality not in locality tree\n\n                    * `-1020` (`PLACE_ALPHA_INVALID`) - Invalid alpha list\n\n\n                    * `-2000` (`STOP_INVALID`) - Invalid stop input\n\n                    * `-2001` (`STOP_PLACE_ID_INVALID`) - Stop number not in locality\n\n\n                    * `-3000` (`ADDRESS_INVALID`) - Invalid address input\n\n                    * `-3001` (`ADDRESS_PLACE_WITHOUT_ADDR`) - Locality does not have\n                    any addresses\n\n\n                    * `-1000` (`IT_COORD_UNKNOWN`) - Transferred coordinate not supported\n                    (incorrect coordinate system)\n\n                    * `-1001` (`IT_COORD_OUT_OF_REGION`) - Transferred coordinates\n                    not supported (outside of region)\n\n                    * `-1002` (`IT_COORD_FORMAT_UNKNOWN`) - Transferred coordinate\n                    is ok, but the format does not match the value\n\n                    * `-200` (`IT_GEOREF_UNKNOWN`) - Invalid georeference\n\n                    * `-201` (`IT_GEOREF_OUT_OF_REGION`) - Invalid georeference section\n                    < 0 or > length of route section\n\n                    * `-300` (`IT_NO_START`) - No origin entered\n\n                    * `-301` (`IT_NO_DESTINATION`) - No destination entered\n\n                    * `-302` (`IT_NO_CONNECTION`) - No journey found\n\n                    * `-303` (`IT_NO_TRANSITIONS`) - No transition point\n\n\n                    * `-3000` (`IT_ADDRESS_INVALID`) - Address invalid\n\n                    * `-3001` (`IT_ADDRESS_PLACE_WITHOUT_ADDR`) - Locality does not\n                    have any addresses\n\n                    * `-3002` (`IT_ADDRESS_EMPTY`) - Empty address input\n\n\n                    * `-5000` (`IT_LOCATOR_INVALID`) - Input locality is invalid\n\n                    * `-5001` (`IT_LOCATOR_INVALID_POOL`) - Input locality not available\n                    in locality tree\n\n                    * `-5002` (`IT_LOCATOR_BULK_POSTCODE`) - Bulk postcode, postcode\n                    with addresses\n\n\n                    * `-4000` (`IT_STREET_INVALID`) - Input street is invalid\n\n                    * `-4001` (`IT_STREE_PLACE_WITHOUT_ADDR`) - Locality does not\n                    have any streets\n\n\n                    * `-8010` (`ANY_UNIQUE`) - Any input uniquely verified\n\n                    * `-8011` (`ANY_LIST`) - Any list verified\n\n                    * `-8012` (`ANY_INVALID`) - Any input invalid\n\n                    * `-8013` (`ANY_PLACE_WITHOUT_MATCHES`) - Any location found,\n                    but cannot be verified\n\n                    * `-8014` (`ANY_TOO_MANY_MATCHES`) - Any input has too many matches\n\n                    * `-8020` (`ANY_MATCH_NONE`) - No matches\n\n                    * `-8031` (`ANY_MATCH`) - Matches (e.g. buildings) found for a\n                    street\n\n                    * `-8032` (`ANY_NO_MATCH`) - No matches found (e.g. buildings)\n                    for a street\n\n\n                    * `-4000` (`NO_CONNECTION`) - No journey found for the time entered\n\n                    * `-4001` (`DATE_INVALID`) - Date not possible in the current\n                    timetable period\n\n                    * `-4002` (`NO_ORIGIN`) - No origin verified\n\n                    * `-4003` (`NO_DESTINATION`) - No destination verified\n\n                    * `-4004` (`ORIGIN_UNKNOWN`) - Origin exists, but cannot be identified\n\n                    * `-4005` (`DESTINATION_UNKNOWN`) - Destination exists, but cannot\n                    be identified\n\n                    * `-4006` (`JUST_WALK`) - Only a walk has been found\n\n                    * `-4007` (`ORIGIN_EQUI_DEST`) - Origin and destination are identical\n\n                    * `-4008` (`VIA_UNKNOWN`) - Unknown via-point\n\n                    * `-4009` (`TIMESPAN_INVALID`) - Time interval is invalid\n\n                    * `-4010` (`VIA_NOINTERCHANGE`) - Via stop point is not an interchange\n                    stop\n\n                    * `-4011` (`VIA_INVALID`) - Invalid via input\n\n                    * `+4011` (`TRIPSTATUS_ALREADYFOUND`) - Moved journey already\n                    exists\n\n                    * `-4012` (`ORIGIN_OUTOFPERMITTEDAREA`) - Origin outside the valid\n                    zone (e.g. fare zone)\n\n                    * `-4013` (`DESTINATION_OUTOFPERMITTEDAREA`) - Destination outside\n                    the valid zone (e.g. fare zone)\n\n                    * `-4014` (`VIA_OUTOFPERMITTEDAREA`) - Via outside the valid zone\n                    (e.g. fare zone)\n\n                    * `-4020` (`NO_TRANSITION`) - No transition point found\n\n                    * `-4030` (`NO_DEPARTURE`) - No departures found\n\n                    * `-4040` (`NO_ARRIVAL`) - No arrivals found\n\n                    * `-4050` (`NO_SERVINGLINES`) - No services found at this stop\n\n                    * `-4060` (`NO_MATCHINGOPERATORS`) - No matching operators\n\n\n                    * `-4100` (`NO_CONNECTION_BECAUSE_OF_RULE`) - No journey because\n                    of a rule\n\n                    * `-4101` (`RULE_CHANGED_OPTIONS`) - Rule changed the options\n\n                    * `-4102` (`RULE_CHANGED_USEONLY`) - Rule chagned the permitted\n                    vehicles\n\n                    * `-4103` (`RECOMPUTE_BECAUSE_OF_RULE`) - Journey has been recalculated\n                    due to a rule with different parameters\n\n                    * `-4104` (`RULE_CHANGED_WITHOUTVIA`) - Rule removed the via point\n\n                    * `-4300` (`NO_CONNECTION_BECAUSE_OF_PREFERTOEXCLUDE_SETTINGS`)\n                    - Invalid prefer-to-exclude parameter\n\n                    * `-4301` (`NO_CONNECTION_BECAUSE_OF_PREFERTOINCLUDE_SETTINGS`)\n                    - Invalid prefer-to-include parameter\n\n                    * `-4302` (`NO_CONNECTION_BECAUSE_OF_MIXEDSETTING_SETTINGS`) -\n                    Invalid mixing of prefer-to-exclude/include parameters\n\n                    * `-4303` (`NO_CONNECTION_BECAUSE_OF_WALKING_SETTINGS`) - Invalid\n                    footpath parameter\n\n                    * `-9999` (`TRIP_CANCELLED`) - Trip has been cancelled\n\n                    * `-10015` (`ERROR_ITROUTER_NO_IT_CONN`) - No journey found\n\n                    '\n                type: integer\n            error:\n                description: This is the error summary for the given message.\n                type: string\n            module:\n                description: Indicates the server module that provided this system\n                    message.\n                type: string\n            type:\n                description: Indicates the type of system message.\n                type: string\n        type: object\n    TripTransportation:\n        description: 'This element describes a route, including information about\n            its route number, usual destination,\n\n            route type and operator.\n\n            '\n        properties:\n            description:\n                description: 'Contains a description of this route.\n\n                    '\n                type: string\n            destination:\n                description: 'This element contains information about where vehicles\n                    on this route terminate.\n\n                    '\n                properties:\n                    id:\n                        description: 'Contains a unique identifier (if available)\n                            of the destination for this route.\n\n                            '\n                        type: string\n                    name:\n                        description: 'This is the name of the destination for this\n                            route.\n\n                            '\n                        type: string\n                type: object\n            disassembledName:\n                description: 'Contains a very short name for the route.\n\n                    '\n                type: string\n            iconId:\n                description: 'Contains an ID for the icon that can be used for this\n                    route. Different values here are\n\n                    used to differentiate differents types of the same route type.\n                    For example, private ferries\n\n                    have a different wayfinding icon to ferries operated by Sydney\n                    Ferries.\n\n\n                    * `1`: Sydney Trains (product class `1`)\n\n                    * `2`: Intercity Trains (product class `1`)\n\n                    * `3`: Regional Trains (product class `1`)\n\n                    * `19`: Temporary Trains (product class `1`)\n                    \n                    \n                    * `24`: Sydney Metro (product class `2`)\n\n\n                    * `13`: Sydney Light Rail (product class `4`)\n\n                    * `20`: Temporary Light Rail (product class `4`)\n\n                    * `21`: Newcastle Light Rail (product class `4`)\n\n\n                    * `4`: Blue Mountains Buses (product class `5`)\n\n                    * `5`: Sydney Buses (product class `5`)\n\n                    * `6`: Central Coast Buses (product class `5`)\n\n                    * `14`: Temporary Buses (product class `5`)\n\n                    * `15`: Hunter Buses (product class `5`)\n\n                    * `23`: On Demand (product class `5`)\n                    \n                    * `31`: Central West and Orana (product class `5`)\n                    \n                    * `32`: Far West (product class `5`)\n                    \n                    * `33`: New England North West (product class `5`)\n                    \n                    * `34`: Newcastle and Hunter (product class `5`)\n\n                    * `35`: North Coast (product class `5`)\n                    \n                    * `36`: Riverina Murray (product class `5`)\n                    \n                    * `37`: South East and Tablelands (product class `5`)\n                    \n                    * `38`: Sydney and Surrounds (product class `5`)\n                    \n\n                    * `9`: Private Buses (product class `5`)\n\n                    * `17`: Private Coaches (product class `5`)\n\n\n                    * `7`: Regional Coaches (product class `7`)\n\n                    * `22`: Temporary Coaches (product class `7`)\n\n\n                    * `10`: Sydney Ferries (product class `9`)\n\n                    * `11`: Newcastle Ferries (product class `9`)\n\n                    * `12`: Private Ferries (product class `9`)\n\n                    * `18`: Temporary Ferries (product class `9`)\n\n\n                    * `8`: School Buses (product class `11`)\n\n                    '\n                type: integer\n            id:\n                description: 'This is an ID that uniquely identifies this route.\n\n                    '\n                type: string\n            name:\n                description: 'This contains the full name of the route.\n\n                    '\n                type: string\n            number:\n                description: 'Contains a short name for the route.\n\n                    '\n                type: string\n            operator:\n                description: 'This element describes the operator of this route.\n\n                    '\n                properties:\n                    id:\n                        description: 'Contains a unique identifier for the given operator.\n\n                            '\n                        type: string\n                    name:\n                        description: 'Contains the name of the operator of the route.\n\n                            '\n                        type: string\n                type: object\n            product:\n                $ref: '#/definitions/RouteProduct'\n                description: This element contains additional properties about the\n                    route.\n            properties:\n                description: 'Contains additional properties about this route.\n\n                    '\n                properties:\n                    isTTB:\n                        description: XXX\n                        type: boolean\n                    tripCode:\n                        description: This is an ID for this journey option.\n                        type: integer\n                type: object\n        type: object\nhost: api.transport.nsw.gov.au\ninfo:\n    title: Trip Planner\n    version: 10.2.1.42\npaths:\n    /add_info:\n        get:\n            description: 'This endpoint returns a list of service alerts or additional\n                information about travelling on the public transport\n\n                network. This list can be filtered by date, route type, route, operator\n                or stop.\n\n                '\n            operationId: tfnsw_addinfo_request\n            parameters:\n            -   description: 'Used to set the response data type. This documentation\n                    only covers responses that use the JSON format.\n\n                    Setting the `outputFormat` value to `rapidJSON` is required to\n                    enable JSON output.\n\n                    '\n                enum:\n                - rapidJSON\n                in: query\n                name: outputFormat\n                required: true\n                type: string\n            -   default: 01-10-2016\n                description: 'This parameter allows you to filter the returned items\n                    that are only valid on the specified date. The format of\n\n                    this field is `DD-MM-YYYY`. For example, 12 September 2016 would\n                    be represented by `12-09-2016`.\n\n                    '\n                in: query\n                name: filterDateValid\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by the modes of transport they affected. Available modes include:\n\n\n                    * `1`: Train\n                    \n                    * `2`: Metro\n\n                    * `4`: Light Rail\n\n                    * `5`: Bus\n\n                    * `7`: Coach\n\n                    * `9`: Ferry\n\n                    * `11`: School Bus\n\n\n                    To search for more than one mode, include the parameter multiple\n                    times.\n\n                    '\n                enum:\n                - 1\n                - 2\n                - 4\n                - 5\n                - 7\n                - 9\n                - 11\n                in: query\n                name: filterMOTType\n                required: false\n                type: integer\n            -   description: 'This field can be used so only current alerts are returned,\n                    and not historic alerts.\n\n                    '\n                enum:\n                - current\n                in: query\n                name: filterPublicationStatus\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by its stop ID or global stop ID. For example, to retrieve items\n                    that are only\n\n                    relevant to Central Station, you would set this value to `10111010`\n                    (stop ID) or `200060` (global stop ID). You can use the `stop_finder`\n                    API call\n\n                    to determine the ID for a particular stop.\n\n                    '\n                in: query\n                name: itdLPxx_selStop\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by line number. For example, `020T1`. You can use this parameter\n\n                    multiple times if you want to search for more than one line number.\n\n                    '\n                in: query\n                name: itdLPxx_selLine\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by operator ID. You can use this parameter\n\n                    multiple times if you want to search for more than one line number.\n\n                    '\n                in: query\n                name: itdLPxx_selOperator\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by specific routes. The route is provided in the format `NNN:LLLLL:D`,\n\n                    (NNN: subnet, LLLLL: Route number, D: direction `H`/`R`). You\n                    can use this parameter\n\n                    multiple times if you want to search for more than one line number.\n\n                    '\n                in: query\n                name: filterPNLineDir\n                required: false\n                type: string\n            -   description: 'This parameter allows you to filter the returned items\n                    by specific routes. The route is provided in the format `NNN:LLLLL:E`,\n\n                    (NNN: subnet, LLLLL: Route number, E: supplement). You can use\n                    this parameter\n\n                    multiple times if you want to search for more than one line number.\n\n                    '\n                in: query\n                name: filterPNLineSub\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 10.2.1.42\n                description: 'Indicates which version of the API the caller is expecting\n                    for both request and response data. Note that if this version\n                    differs\n\n                    from the version listed above then the returned data may not be\n                    as expected.\n\n                    '\n                in: query\n                name: version\n                required: false\n                type: string\n            responses:\n                200:\n                    description: A list of informational messages related to current\n                        or previous outages.\n                    schema:\n                        $ref: '#/definitions/AdditionalInfoResponse'\n                401:\n                    description: The application calling the API has not been authenticated.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                500:\n                    description: An internal error has occurred.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                503:\n                    description: The server is currently unavailable.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n            summary: Provides capability to display all public transport service status\n                and incident information (as published from the Service Alert Messaging System).\n    /coord:\n        get:\n            description: 'This endpoint returns places of interest based on the given\n                coordinate and a radius. The types of POIs can be controlled, so if,\n                for example,\n\n                you only want Opal resellers returned, you can do so.\n\n                '\n            operationId: tfnsw_coord_request\n            parameters:\n            -   description: 'Used to set the response data type. This documentation\n                    only covers responses that use the JSON format.\n\n                    Setting the `outputFormat` value to `rapidJSON` is required to\n                    enable JSON output.\n\n                    '\n                enum:\n                - rapidJSON\n                in: query\n                name: outputFormat\n                required: true\n                type: string\n            -   default: 151.206290:-33.884080:EPSG:4326\n                description: 'The coordinate is in the format `LONGITUDE:LATITUDE:EPSG:4326`\n                    (Note that longitude is first).\n\n                    For example, the following `coord` value can be used to search\n                    around Central Station: `151.206290:-33.884080:EPSG:4326`.\n\n                    '\n                in: query\n                name: coord\n                required: true\n                type: string\n            -   description: 'This specifies the format the coordinates are returned\n                    in. While other variations are available, the `EPSG:4326` format\n                    will return the widely-used format.\n\n                    '\n                enum:\n                - EPSG:4326\n                in: query\n                name: coordOutputFormat\n                required: true\n                type: string\n            -   default: 1\n                description: 'This enables \"advanced filter mode\" on the server, which\n                    is required to enable searching using coordinates.\n\n                    '\n                enum:\n                - 1\n                in: query\n                name: inclFilter\n                required: true\n                type: integer\n            -   default: GIS_POINT\n                description: 'This specifies the type of items to return.\n\n\n                    * `GIS_POINT`: GIS points, including Opal resellers (see `inclDrawClasses_1`)\n\n                    * `BUS_POINT`: Stops/stations\n\n                    * `POI_POINT`: Places of interest\n\n\n                    The `_1` suffix is an index for this particular filter. You can\n                    specify multiple filters by incrementing the suffix\n\n                    for each combination of `type`, `radius` and `inclDrawClasses`.\n                    For example, `type_1` means the first filter, `type_2`\n\n                    refers to the second, and so on.\n\n                    '\n                enum:\n                - GIS_POINT\n                - BUS_POINT\n                - POI_POINT\n                in: query\n                name: type_1\n                required: true\n                type: string\n            -   default: 1000\n                description: 'This indicates the maximum number of metres to search\n                    in all directions from the location specified in `coord`. For\n                    example,\n\n                    if you use a value of `500`, a `type_1` value of `GIS_POINT` and\n                    `inclDrawClasses_1` with a value of `74`, all Opal resellers\n\n                    within 500 metres will be returned. The suffix of `_1` indicates\n                    this radius value corresponds to the `type_1` value. If multiple\n\n                    filters are to be included, the appropriate suffix should be updated\n                    accordingly.\n\n                    '\n                in: query\n                name: radius_1\n                required: true\n                type: integer\n            -   description: 'This flag changes the list of POIs that are returned.\n                    To return Opal resellers, set this value to `74`\n\n                    and `type_1` to `GIS_POINT`.The suffix of `_1` indicates this\n                    radius value corresponds to the `type_1` value.\n\n                    If multiple filters are to be included, the appropriate suffix\n                    should be updated accordingly.\n\n                    '\n                enum:\n                - 74\n                in: query\n                name: inclDrawClasses_1\n                required: false\n                type: integer\n            -   default: 'true'\n                description: 'This field indicates how the returned data is to be\n                    used, which in turn impacts whether or not certain locations are\n                    returned.\n\n                    '\n                enum:\n                - 'true'\n                in: query\n                name: PoisOnMapMacro\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 10.2.1.42\n                description: 'Indicates which version of the API the caller is expecting\n                    for both request and response data. Note that if this version\n                    differs\n\n                    from the version listed above then the returned data may not be\n                    as expected.\n\n                    '\n                in: query\n                name: version\n                required: false\n                type: string\n            responses:\n                200:\n                    description: A list of places of interest.\n                    schema:\n                        $ref: '#/definitions/CoordRequestResponse'\n                401:\n                    description: The application calling the API has not been authenticated.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                500:\n                    description: An internal error has occurred.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                503:\n                    description: The server is currently unavailable.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n            summary: When given a specific geographical location, this API finds public\n                transport stops, stations, wharfs and points of interest around that\n                location.\n    /departure_mon:\n        get:\n            description: 'This endpoint returns a list of departures for a given location\n                based on the date and time specified. This data can be used to\n\n                display a \"upcoming departures\" board for a stop.\n\n                '\n            operationId: tfnsw_dm_request\n            parameters:\n            -   description: 'Used to set the response data type. This documentation\n                    only covers responses that use the JSON format.\n\n                    Setting the `outputFormat` value to `rapidJSON` is required to\n                    enable JSON output.\n\n                    '\n                enum:\n                - rapidJSON\n                in: query\n                name: outputFormat\n                required: true\n                type: string\n            -   description: This specifies the format the coordinates are returned\n                    in. While other variations are available, the `EPSG:4326` format\n                    will return the widely-used format.\n                enum:\n                - EPSG:4326\n                in: query\n                name: coordOutputFormat\n                required: true\n                type: string\n            -   default: direct\n                description: 'This allows the departure board to display directly\n                    without going through the stop verification process. Use this\n                    when the stop is known.\n\n                    This relies on the given combination of `type_dm` and `name_dm`\n                    returning only a single result, otherwise a list of stops and\n                    no departures\n\n                    shall be returned.\n\n                    '\n                enum:\n                - direct\n                in: query\n                name: mode\n                required: false\n                type: string\n            -   default: stop\n                description: 'This specifies the type of results expected based on\n                    the search input in `name_dm`. By specifying `any`, locations\n                    of all types can be returned.\n\n                    Typically, this API call is used for a specific stop, so `stop`\n                    should be used along with a stop ID or global stop ID in `name_dm`.\n\n                    '\n                enum:\n                - any\n                - coord\n                - poi\n                - singlehouse\n                - stop\n                - platform\n                - street\n                - locality\n                - suburb\n                in: query\n                name: type_dm\n                required: true\n                type: string\n            -   default: 10111010\n                description: 'This is the search term that will be used to find locations.\n                    If the combination of this value and `type_dm` results in more\n                    than one\n\n                    location found - or `mode` is not set to `direct`, then a list\n                    of stops and no departures will be returned.\n\n                    If `type_dm` is set to `stop` then this value can take a stop\n                    ID or a global stop ID.\n\n                    '\n                in: query\n                name: name_dm\n                required: true\n                type: string\n            -   description: 'Setting this parameter to `$USEPOINT$` enables you to\n                    request departures for a specific platform within a station. If\n                    this isn''t used,\n\n                    then departures for all platforms at the stop specified in `name_dm`\n                    are returned.\n\n                    '\n                enum:\n                - $USEPOINT$\n                in: query\n                name: nameKey_dm\n                required: false\n                type: string\n            -   default: 20161001\n                description: 'The reference date used when searching trips, in `YYYYMMDD`\n                    format. For instance, 20160901 refers to\n\n                    1 September 2016. Works in conjunction with the `itdTime` value.\n                    If not specified, the current server date is used.\n\n                    '\n                in: query\n                name: itdDate\n                required: false\n                type: string\n            -   default: 1200\n                description: 'The reference time used when searching trips, in `HHMM`\n                    24-hour format. For instance, 2215 refers to 10:15 PM. |\n\n                    Works in conjunction with the `itdDate` value. If not specified,\n                    the current server time is used.\n\n                    '\n                in: query\n                name: itdTime\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 'true'\n                description: 'Including this parameter enables a number of options\n                    that result in the departure monitor operating in the same way\n\n                    as the Transport for NSW Trip Planner web site. It is recommended\n                    this is enabled, along with the\n\n                    `TfNSWDM` parameter.\n\n                    '\n                enum:\n                - 'true'\n                in: query\n                name: departureMonitorMacro\n                required: false\n                type: string\n            -   description: 'This parameter which means of transport to exclude from\n                    the departure monitor. To exclude one means, select one of the\n                    following: `1` = train, `2` = metro, `4` = light rail, `5` = bus, `7` = coach,\n                    `9` = ferry, `11` = school bus. `checkbox` allows you to exclude\n                    more than one means of transport when used in conjunction with\n                    the `exclMOT_<ID>` parameters.\n\n                    '\n                enum:\n                - checkbox\n                - '1'\n                - '2'\n                - '4'\n                - '5'\n                - '7'\n                - '9'\n                - '11'\n                in: query\n                name: excludedMeans\n                required: false\n                type: string\n            -   description: 'Excludes train services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_1\n                required: false\n                type: string\n            -   description: 'Excludes metro services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_2\n                required: false\n                type: string\n            -   description: 'Excludes light rail services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_4\n                required: false\n                type: string\n            -   description: 'Excludes bus services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_5\n                required: false\n                type: string\n            -   description: 'Excludes coach services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_7\n                required: false\n                type: string\n            -   description: 'Excludes ferry services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_9\n                required: false\n                type: string\n            -   description: 'Excludes school bus services from the departure monitor.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_11\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 'true'\n                description: 'Including this parameter enables a number of options\n                    that result in the departure monitor operating in the same way\n                    as the\n\n                    Transport for NSW Trip Planner web site, including enabling real-time\n                    data. It is recommended this is enabled,\n\n                    along with the `departureMonitorMacro` parameter.\n\n                    '\n                enum:\n                - 'true'\n                in: query\n                name: TfNSWDM\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 10.2.1.42\n                description: 'Indicates which version of the API the caller is expecting\n                    for both request and response data. Note that if this version\n                    differs\n\n                    from the version listed above then the returned data may not be\n                    as expected.\n\n                    '\n                in: query\n                name: version\n                required: false\n                type: string\n            responses:\n                200:\n                    description: A list of departures for the specified inputs\n                    schema:\n                        $ref: '#/definitions/DepartureMonitorResponse'\n                401:\n                    description: The application calling the API has not been authenticated.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                500:\n                    description: An internal error has occurred.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                503:\n                    description: The server is currently unavailable.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n            summary: Provides capability to provide NSW public transport departure\n                information from a stop, station or wharf including real-time.\n    /stop_finder:\n        get:\n            description: 'This endpoint returns info about stops that match the search\n                criteria. Matches can be sorted on `matchQuality` to determine the\n                best matches for the given input,\n\n                while the best match will be indicated by the `isBest` value.\n\n                '\n            operationId: tfnsw_stopfinder_request\n            parameters:\n            -   description: 'Used to set the response data type. This documentation\n                    only covers responses that use the JSON format.\n\n                    Setting the `outputFormat` value to `rapidJSON` is required to\n                    enable JSON output.\n\n                    '\n                enum:\n                - rapidJSON\n                in: query\n                name: outputFormat\n                required: true\n                type: string\n            -   description: 'This specifies the type of results expected in the list\n                    of returned stops. By specifying `any`, locations of all types\n                    can be returned.\n\n                    If you specifically know that you''re searching using a coord,\n                    specify `coord`. Likewise, if you''re using a stop ID or global\n                    stop ID as an input, use `stop`\n\n                    for more accurate results.\n\n                    '\n                enum:\n                - any\n                - coord\n                - poi\n                - stop\n                in: query\n                name: type_sf\n                required: false\n                type: string\n            -   default: Circular Quay\n                description: 'This is the search term that will be used to find locations.\n\n                    To lookup a coordinate, set `type_sf` to `coord`, and use the\n                    following format:\n\n                    `LONGITUDE:LATITUDE:EPSG:4326` (Note that longitude is first).\n                    For example, `151.206290:-33.884080:EPSG:4326`.\n\n                    To lookup a stop set `type_sf` to  `stop` and enter the stop id\n                    or global stop ID. For example, `10101100`\n\n                    '\n                in: query\n                name: name_sf\n                required: true\n                type: string\n            -   description: This specifies the format the coordinates are returned\n                    in. While other variations are available, the `EPSG:4326` format\n                    will return the widely-used format.\n                enum:\n                - EPSG:4326\n                in: query\n                name: coordOutputFormat\n                required: true\n                type: string\n            -   allowEmptyValue: true\n                default: 'true'\n                description: 'Including this parameter enables a number of options\n                    that result in the stop finder operating in the same way as the\n                    Transport for NSW Trip Planner web site.\n\n                    '\n                enum:\n                - 'true'\n                in: query\n                name: TfNSWSF\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 10.2.1.42\n                description: 'Indicates which version of the API the caller is expecting\n                    for both request and response data. Note that if this version\n                    differs\n\n                    from the version listed above then the returned data may not be\n                    as expected.\n\n                    '\n                in: query\n                name: version\n                required: false\n                type: string\n            responses:\n                200:\n                    description: A list of stops and locations that can be used in\n                        trip planner requests. Invalid parameters do not generate\n                        an error response. Rather, the response may simply contain\n                        0 or more locations.\n                    schema:\n                        $ref: '#/definitions/StopFinderResponse'\n                401:\n                    description: The application calling the API has not been authenticated.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                500:\n                    description: An internal error has occurred.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                503:\n                    description: The server is currently unavailable.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n            summary: Provides capability to return all NSW public transport stop,\n                station, wharf, points of interest and known addresses to be used\n                for auto-suggest/auto-complete (to be used with the Trip planner and\n                Departure board APIs).\n    /trip:\n        get:\n            description: 'This endpoint is used to find a list of journeys between\n                two locations at the specified date and time. For example,\n\n                if the user is at the Airport and wants to get to Manly using public\n                transport but isn''t sure how exactly, this call\n\n                will tell them exactly which train, bus, ferry or light rail to catch,\n                and between which stops. It is extremely detailed,\n\n                and includes the the specific path the vehicle(s) will take.\n                '\n            operationId: tfnsw_trip_request2\n            parameters:\n            -   description: 'Used to set the response data type. This documentation\n                    only covers responses that use the JSON format.\n\n                    Setting the `outputFormat` value to `rapidJSON` is required to\n                    enable JSON output.\n\n                    '\n                enum:\n                - rapidJSON\n                in: query\n                name: outputFormat\n                required: true\n                type: string\n            -   description: This specifies the format the coordinates are returned\n                    in. While other variations are available, the `EPSG:4326` format\n                    will return the widely-used format.\n                enum:\n                - EPSG:4326\n                in: query\n                name: coordOutputFormat\n                required: true\n                type: string\n            -   description: 'This value anchors the requested date time. If set to\n                    `dep`, then trips *departing after* the specified date/time\n\n                    *at the specified location* are included.\n\n                    If set to `arr`, then trips *arriving before* the specified time\n                    *at its destination stop* are included. Works in conjunctions\n                    with the\n\n                    `itdDate` and `itdTime` values.\n\n                    '\n                enum:\n                - dep\n                - arr\n                in: query\n                name: depArrMacro\n                required: true\n                type: string\n            -   default: 20161001\n                description: 'The reference date used when searching trips, in `YYYYMMDD`\n                    format. For instance, `20160901` refers to\n\n                    1 September 2016. Works in conjunction with the `itdTime` and\n                    `depArrMacro` values. If not specified, the current server date\n                    is used.\n\n                    '\n                in: query\n                name: itdDate\n                required: false\n                type: string\n            -   default: 1200\n                description: 'The reference time used when searching trips, in `HHMM`\n                    24-hour format. For instance, `2215` refers to 10:15 PM. |\n\n                    Works in conjunction with the `itdDate` and `depArrMacro` values.\n                    If not specified, the current server time is used.\n\n                    '\n                in: query\n                name: itdTime\n                required: false\n                type: string\n            -   default: any\n                description: 'This is the type of data specified in the `name_origin`\n                    field. The origin indicates the starting point when searching\n                    for journeys.\n\n                    The best way to use the trip planner is to use use `any` for this\n                    field then specify a valid location ID in `type_origin`, or to\n                    use `coord`\n\n                    in this field and a correctly formatted coordinate in `type_origin`.\n\n                    '\n                enum:\n                - any\n                - coord\n                in: query\n                name: type_origin\n                required: true\n                type: string\n            -   default: 10101331\n                description: 'This value is used to indicate the starting point when\n                    searching for journeys.\n\n                    This value can be one of three things:\n\n                    A valid location/stop ID (for example, `10101100` indicates Central\n                    Station - this can be determined using `stop_finder`).\n\n                    A valid global stop ID (for example, `200060` indicates Central\n                    Station - this can be determined using `stop_finder`)\n\n                    Coordinates in the format `LONGITUDE:LATITUDE:EPSG:4326` (Note\n                    that longitude is first).\n\n                    '\n                in: query\n                name: name_origin\n                required: true\n                type: string\n            -   default: any\n                description: 'This is the type of data specified in the `name_destination`\n                    field. The origin indicates the finishing point when searching\n                    for journeys.\n\n                    The best way to use the trip planner is to use use `any` for this\n                    field then specify a valid location ID in `type_destination`,\n                    or to use `coord`\n\n                    in this field and a correctly formatted coordinate in `type_destination`.\n\n                    '\n                enum:\n                - any\n                - coord\n                in: query\n                name: type_destination\n                required: true\n                type: string\n            -   default: 10102027\n                description: 'This value is used to indicate the finishing point when\n                    searching for journeys.\n\n                    This value can be one of three things:\n\n                    A valid location/stop ID (for example, `10101100` indicates Central\n                    Station - this can be determined using `stop_finder`).\n\n                    A valid global stop ID (for example, `200060` indicates Central\n                    Station - this can be determined using `stop_finder`)\n\n                    Coordinates in the format `LONGITUDE:LATITUDE:EPSG:4326` (Note\n                    that longitude is first).\n\n                    '\n                in: query\n                name: name_destination\n                required: true\n                type: string\n            -   default: 6\n                description: 'This parameter indicates the maximum number of trips\n                    to returned. Fewer trips may be returned anyway,\n\n                    depending on the available public transport services.\n\n                    '\n                in: query\n                name: calcNumberOfTrips\n                required: false\n                type: integer\n            -   description: 'Including this parameter (regardless of its value) ensures\n                    that only wheelchair-accessible options are returned.\n\n                    '\n                enum:\n                - 'on'\n                in: query\n                name: wheelchair\n                required: false\n                type: string\n            -   description: 'This parameter which means of transport to exclude from\n                    the trip plan. To exclude one means, select one of the following:\n                    `1` = train, `2` = metro, `4` = light rail, `5` = bus, `7` = coach, `9` = ferry,\n                    `11` = school bus. `checkbox` allows you to exclude more than\n                    one means of transport when used in conjunction with the `exclMOT_<ID>`\n                    parameters.\n\n                    '\n                enum:\n                - checkbox\n                - '1'\n                - '2'\n                - '4'\n                - '5'\n                - '7'\n                - '9'\n                - '11'\n                in: query\n                name: excludedMeans\n                required: false\n                type: string\n            -   description: 'Excludes train services from the trip plan.  Must be\n                    used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_1\n                required: false\n                type: string\n            -   description: 'Excludes metro services from the trip plan.  Must be\n                    used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_2\n                required: false\n                type: string\n            -   description: 'Excludes light rail services from the trip plan.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_4\n                required: false\n                type: string\n            -   description: 'Excludes bus services from the trip plan.  Must be used\n                    in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_5\n                required: false\n                type: string\n            -   description: 'Excludes coach services from the trip plan.  Must be\n                    used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_7\n                required: false\n                type: string\n            -   description: 'Excludes ferry services from the trip plan.  Must be\n                    used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_9\n                required: false\n                type: string\n            -   description: 'Excludes school bus services from the trip plan.  Must\n                    be used in conjunction with `excludedMeans=checkbox`\n\n                    '\n                enum:\n                - '1'\n                in: query\n                name: exclMOT_11\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 'true'\n                description: 'Including this parameter enables a number of options\n                    that result in this API call operating in the same way as the\n                    Transport for NSW Trip Planner web site, including enabling real-time\n                    data.\n\n                    '\n                enum:\n                - 'true'\n                in: query\n                name: TfNSWTR\n                required: false\n                type: string\n            -   allowEmptyValue: true\n                default: 10.2.1.42\n                description: 'Indicates which version of the API the caller is expecting\n                    for both request and response data. Note that if this version\n                    differs\n\n                    from the version listed above then the returned data may not be\n                    as expected.\n\n                    '\n                in: query\n                name: version\n                required: false\n                type: string\n            -   default: 1\n                description: 'This parameter activates the options for individual\n                    transport. If the parameter is disabled, the parameters concerning\n                    individual transport will not be taken into account. possible\n                    values are 0 and 1\n\n                    '\n                in: query\n                name: itOptionsActive\n                required: false\n                type: integer\n            -   description: 'Activates the calculation of a monomodal trip, i.e.,\n                    a trip that takes place exclusively with the means of transport\n                    <means of transport>, e.g., with bicycle. Note 1: In order to\n                    use this parameter, the options for individual transport must\n                    be activated with itOptionsActive=1. Note 2: If no monomodal trip\n                    with the means of transport <means of transport> is calculated\n                    despite the parameter, the maximum time is often set too low.\n                    The parameter MaxITTime applies to all means of transport, the\n                    parameter MaxITTime<means of transport>to the means of transport\n                    <means of transport> (e.g., MaxITTime107). These parameters are\n                    located in the [Parameters] section or are added to it. The configuration\n                    can be alternatively overridden bythe maxTime<Transport means>\n                    parameter.\n\n                    '\n                in: query\n                name: computeMonomodalTripBicycle\n                required: false\n                type: boolean\n            -   default: 16\n                description: \"The value of the <speed> parameter is used to specify\\\n                    \\ the speed of cycle travel in kilometers per hour.Note: In order\\\n                    \\ to use this parameter, the options for individual transport\\\n                    \\ must be activated with itOptionsActive=1. If the parameter is\\\n                    \\ to be specified together with a profile, the bikeProfSpeed parameter\\\n                    \\ can be used.The parameter \\u201C'cycleSpeed\\u201D specifies\\\n                    \\ the desired real speed of the user for the bike route, which\\\n                    \\ overwrites the speed in the SpeedSettings of the corresponding\\\n                    \\ \\u201CbikeProfSpeed\\u201D.\\n\"\n                in: query\n                name: cycleSpeed\n                required: false\n                type: integer\n            -   description: 'With the parameter ''bikeProfSpeed'' a bike profile\n                    name is passed\n\n                    '\n                enum:\n                - EASIER\n                - MODERATE\n                - MOST_DIRECT\n                in: query\n                name: bikeProfSpeed\n                required: false\n                type: string\n            -   description: 'The value of the this parameter sets the maximum time\n                    to be covered by the means of cycling. The time is specified in\n                    minutes. Note: To use this parameter, the options for individual\n                    transport must be enabled with itOptionsActive=1\n\n                    '\n                in: query\n                name: maxTimeBicycle\n                required: false\n                type: integer\n            -   description: 'Restricts the calculation to trips with the bikes only.\n                    Note: To be able to use this parameter, the options for individual\n                    transport must be activated with itOptionsActive=1. Possible values\n                    are 1, true, on\n\n                    '\n                in: query\n                name: onlyITBicycle\n                required: false\n                type: integer\n            -   description: 'If this parameter is active, the elevation data is taken\n                    into account in the trip calculation for all means of transport\n                    and output in a route description for each individual transport\n                    section. Note: To be able to use this parameter, the options for\n                    individual transport must be activated with itOptionsActive=1.\n                    Possible values are 1, true, on\n\n                    '\n                in: query\n                name: useElevationData\n                required: false\n                type: integer\n            -   description: 'This parameter specifies the maximum slope for bike\n                    routes. Roads with a slope greater than the specified??\n                    one are\n                    avoided. The slope is specified by a factor <factor> whose value\n                    range is [0..100]. By default, the value of the parameter is 50\n\n                    '\n                in: query\n                name: elevFac\n                required: false\n                type: integer\n            responses:\n                200:\n                    description: A list of suggested journeys.\n                    schema:\n                        $ref: '#/definitions/TripRequestResponse'\n                401:\n                    description: The application calling the API has not been authenticated.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                500:\n                    description: An internal error has occurred.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n                503:\n                    description: The server is currently unavailable.\n                    schema:\n                        $ref: '#/definitions/HttpErrorResponse'\n            summary: Provides capability to provide NSW public transport trip plan\n                options, including walking and driving legs and real-time \n                information.\nproduces:\n- application/json\nschemes:\n- https\nsecurity:\n-   APIKey: []\nsecurityDefinitions:\n    APIKey:\n        description: 'Expected Format: apikey [TOKEN]'\n        in: header\n        name: Authorization\n        type: apiKey\nswagger: '2.0'\n",
      "url": "D:/Downloads/tripplanner_swag_20231016_1.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "suppressClientClassesOutput": false,
      "generateClientInterfaces": false,
      "suppressClientInterfacesOutput": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "TripPlannerException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "propertySetterAccessModifier": "",
      "generateNativeRecords": false,
      "useRequiredKeyword": false,
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "TransportOpenData.TripPlanner",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "jsonPolymorphicSerializationStyle": "NJsonSchema",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "D:/Downloads/TripP2",
      "newLineBehavior": "Auto"
    }
  }
}